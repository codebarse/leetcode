# Always start the readme with the link to the problem statement.
Link : https://leetcode.com/problems/two-sum/

# An optimal solution is always going to be the one with the best time complexity. 
# An alternate solution can have worse time complexity but probably is easy to understand/implement etc.
# Space complexity is the second most important factor.
# In case there are multiple different approaches with the same time and space complexity, just put all of them as optimal.
OptimalSoln1 : {
	Time Complexity : O(n)
	Space Complexity : O(n)
	Solution : {
		1. Use a Map to maintain the numbers that exist in the input as key alongwith their index as value.
		2. For each number 'x' in input vector, check if (target - x) exists. If it does exist then we have found the two numbers.
	}
}

OptimalSoln2 : {
  Time Complexity : O(n)
  Space Complexity : O(n)
  Solution : {
    This is a sample text just to explain that there can be multiple optimal solutions.
  }
}

AltSoln1 : {
  Time Complexity : O(n^2)
  Space Complexity : O(n)
  Solution : {
    This is a sample text just to explain that there can be alternate solutions.
  }
}

AltSoln2 : {
  Time Complexity : O(n^n)
  Space Complexity : O(n^n)
  Solution : {
    An alternate solution with a shitty time and space complexity.
  }
}
